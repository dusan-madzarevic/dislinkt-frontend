# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  pull_request:
  push:
    branches:
     - main
     - development

jobs:
  build:
    name: Build, Test & Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_TOKEN }}
            
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16.17.0
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: npm install --no-package-lock
        working-directory: ./front-dislinkt
          
      - name: Run Unit Tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless
        working-directory: ./front-dislinkt
        
      - name: Build Application
        run: npm run build
        working-directory: ./front-dislinkt
        
      - name: Zip dist folder
        run: zip -r dist.zip dist
        working-directory: ./front-dislinkt
        
      - name: Prepare release plugins
        run: npm install @semantic-release/git @semantic-release/changelog @semantic-release/exec -D
        working-directory: ./front-dislinkt
        
      - name: Release
        working-directory: ./front-dislinkt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
    
        
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: front-dislinkt
          args: >
            -Dsonar.sources=./src/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
